import numpy as np

# the normaliser for the video model

MEAN = np.array([
  161.57624166,  161.57592086,  161.57661168,  161.58537849,  161.60238336,
  161.62060835,  161.62106932,  161.63572771,  161.63303805,  161.64030319,
  161.64186039,  161.6589797 ,  161.66695648,  161.69509038,  161.70985285,
  161.71434994,  161.7121525 ,  161.73389066,  161.73550519,  161.72907198,
  161.7231392 ,  161.72762268,  161.72069667,  161.72652639,  161.71721805,
  161.72742213,  161.70745966,  161.68321521,  161.68221087,  161.66782792,
  161.66209334,  161.65787134,  161.64352868,  161.65020822,  161.65378531,
  161.65869334,  161.66326619,  161.65616882,  161.6693125 ,  161.67752946,
  161.67534183,  161.69071409,  161.69841904,  161.7047858 ,  161.72040453,
  161.73402032,  161.73147732,  161.71723992,  161.70118683,  161.70734921,
  161.68804655,  161.68746851,  161.6805061 ,  161.69193258,  161.67965642,
  161.68440528,  161.67923849,  161.67325388,  161.65570947,  161.66228437,
  161.66479515,  161.67386539,  161.69055778,  161.69377653,  161.66341904,
  161.67144028,  161.68169271,  161.69600221,  161.69359927,  161.69893061,
  161.69440599,  161.70457699,  161.70618033,  161.72379295,  161.72858596,
  161.73988571,  161.74640733,  161.75193304,  161.74863471,  161.76568877,
  161.76410612,  161.76930126,  161.76772855,  161.76875814,  161.75433268,
  161.74397394,  161.73546937,  161.73775985,  161.74825157,  161.73135426,
  161.7246015 ,  161.72044092,  161.71556651,  161.70762865,  161.70497154,
  161.69190111,  161.69001237,  161.67215636,  161.66866635,  161.68239871,
  161.67531822,  161.67807126,  161.67307656,  161.66693831,  161.66683396,
  161.67994003,  161.67326189,  161.69304893,  161.68465573,  161.67447167,
  161.65753118,  161.67327256,  161.6675844 ,  161.67192946,  161.65731563,
  161.66818911,  161.6667781 ,  161.6693245 ,  161.65016069,  161.64455556])

SD = np.array([
  14.83571143,  14.83765445,  14.84415873,  14.85203266,  14.85211426,
  14.83130864,  14.8240926 ,  14.81921195,  14.81122116,  14.80676655,
  14.80941547,  14.81608661,  14.80923581,  14.81203876,  14.8063981,
  14.8154088 ,  14.81001017,  14.79326911,  14.78168516,  14.78535587,
  14.78116774,  14.78742359,  14.77859254,  14.77799024,  14.76502968,
  14.75944597,  14.7820636 ,  14.80332911,  14.80506367,  14.80761726,
  14.80697971,  14.79440997,  14.78751371,  14.77829074,  14.78066044,
  14.78347467,  14.79379639,  14.81311993,  14.80757802,  14.80529744,
  14.78931878,  14.78380532,  14.77058703,  14.78149499,  14.78749546,
  14.79779342,  14.78892266,  14.8005609 ,  14.79668762,  14.79004885,
  14.78962034,  14.78670891,  14.79470924,  14.78638177,  14.76712575,
  14.76001826,  14.74223076,  14.72861272,  14.71829702,  14.72177303,
  14.72821089,  14.74059013,  14.75500473,  14.75856138,  14.75436547,
  14.7534318 ,  14.75344915,  14.75349464,  14.75339926,  14.74403403,
  14.74697305,  14.73292407,  14.72465832,  14.71983642,  14.70660177,
  14.71862714,  14.72416639,  14.73763559,  14.74790988,  14.73182716,
  14.7299102 ,  14.72556631,  14.71789611,  14.72438847,  14.71748765,
  14.71204041,  14.72285879,  14.71799468,  14.71738699,  14.7108672,
  14.71225362,  14.70256059,  14.69810158,  14.67358037,  14.66494192,
  14.675209  ,  14.67245394,  14.66985585,  14.68873533,  14.69098189,
  14.7160291 ,  14.72322243,  14.7257674 ,  14.72994183,  14.7363522,
  14.73097547,  14.73115939,  14.72736531,  14.73077287,  14.73192016,
  14.72321234,  14.72198677,  14.7236955 ,  14.72304801,  14.73560344,
  14.7512431 ,  14.74850662,  14.75439935,  14.77610289,  14.77378412])

Y_MEAN = 81.6189516502

Y_SD = 13.922121713



class Normalizer:
    def __init__(self, mean, sd, y_mean, y_sd):
        self.__mean = mean
        self.__sd = sd
        self.__y_mean = y_mean
        self.__y_sd = y_sd

    def normalize_bpm(self, bpm):
        return (bpm - self.__y_mean) / (self.__y_sd)

    def unnormalize_bpm(self, bpm):
        return (bpm * self.__y_sd) + self.__y_mean

    def normalize_data(self, X):
        X -= self.__mean
        X /= (self.__sd)
        return X

premade_video_normalizer = Normalizer(MEAN, SD, Y_MEAN, Y_SD)

premade_audio_normalizer = Normalizer(
    np.load('data_analysis/mean.npy'),
    np.load('data_analysis/sd.npy'),
    np.load('data_analysis/y_mean.npy'),
    np.load('data_analysis/y_sd.npy')
    )
